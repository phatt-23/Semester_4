<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>HTTP App</title>
  <script type="module" src="https://cdn.jsdelivr.net/npm/@ionic/core@7.0.0/dist/ionic/ionic.esm.js"></script>
  <script nomodule src="https://cdn.jsdelivr.net/npm/@ionic/core@7.0.0/dist/ionic/ionic.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@ionic/core@7.0.0/css/ionic.bundle.css" />
</head>
<body>

  <ion-app>
    <ion-header>
      <ion-toolbar>
        <ion-title>HTTP</ion-title>
      </ion-toolbar>
    </ion-header>

    <ion-content fullscreen>
      <ion-card>
        <ion-card-header>
          <ion-card-title>Query</ion-card-title>
        </ion-card-header>
        <ion-card-content>
          <ion-input id="url" label="URL" placeholder="Enter URL"></ion-input>
          <ion-input id="login" label="Login" placeholder="Enter Login"></ion-input>
        </ion-card-content>
      </ion-card>

      <ion-card>
        <ion-card-header>
          <ion-card-title>Response</ion-card-title>
        </ion-card-header>
        <ion-card-content>
          <ion-textarea id="secretData" readonly label="Received Secret Data" label-placement="stacked" placeholder="Here will be the received secret data"></ion-textarea>
          <ion-textarea id="decodedSecretData" readonly label="Decoded Secret Data" label-placement="stacked" placeholder="Here will be the decoded received secret data"></ion-textarea>
          <ion-textarea id="finalMessage" readonly label="Final Message" label-placement="stacked" placeholder="Here will be the final message"></ion-textarea>
        </ion-card-content>
      </ion-card>

      <ion-card>
        <ion-card-content>
          <ion-button expand="block" onclick="handleGetCode('get')">Get Code (GET)</ion-button>
          <ion-button expand="block" onclick="handleGetCode('post')">Get Code (POST)</ion-button>
          <ion-button expand="block" onclick="handleSendCode()">Send Code</ion-button>
        </ion-card-content>
      </ion-card>
    </ion-content>
  </ion-app>

  <script>
    let secretData = "";
    let decodedSecretData = "";
    let finalMessage = "";
    
    document.addEventListener("DOMContentLoaded", () => {
      document.getElementById("url").value = "https://homel.vsb.cz/~mor03/TAMZ/TAMZ22.php";
      document.getElementById("login").value = "TRA0163";
    });

    async function handleGetCode(method) {
      const url = document.getElementById("url").value;
      const login = document.getElementById("login").value;

      if (!login) {
        alert("Please, provide login!");
        return;
      }

      if (method === "get") {
        const response = await fetch(`${url}?user=${login}&timestamp=${Date.now()}`);
        secretData = await response.text();
      } else {
        const formData = new URLSearchParams({ user: login, timestamp: Date.now().toString() });
        const response = await fetch(url, {
          method: "POST",
          body: formData,
          headers: { "Content-Type": "application/x-www-form-urlencoded" }
        });
        secretData = await response.text();
      }

      decodedSecretData = atob(secretData);
      document.getElementById("secretData").value = secretData;
      document.getElementById("decodedSecretData").value = decodedSecretData;
    }

    async function handleSendCode() {
      const url = document.getElementById("url").value;
      const response = await fetch(url, {
        method: "POST",
        body: new URLSearchParams({ timestamp: Date.now().toString() }),
        headers: { "Authorization": `Bearer ${secretData}` }
      });

      finalMessage = await response.text();
      document.getElementById("finalMessage").value = finalMessage;
    }
  </script>

</body>
</html>

